generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model user {
  id      String   @id @default(cuid())
  email   String   @unique
  name    String?
  role    role     @default(USER)
  image   String?
  answers answer[]
  posts   post[]
}

model post {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt
  title      String
  pushlished Boolean  @default(false)
  text       String?
  image_url  String?
  authorId   String
  answers    answer[]
  author     user     @relation(fields: [authorId], references: [id], onDelete: Cascade)
}

model answer {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  answerId  String?
  userId    String
  postId    String
  answer    answer?  @relation("PostAnswer", fields: [answerId], references: [id], onDelete: Cascade)
  answers   answer[] @relation("PostAnswer")
  post      post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum role {
  USER
  ADMIN
}

// Launch the Prisma Studio : npx prisma studio
// Pull the latest changes from the database: npx prisma db pull
// Push the changes to the database: npx prisma db push
// Generate Prisma Client: npx prisma generate

// Step 1: Create a migration

// model user {
//  phone_number String? @unique
// }

// Step 2: Apply the migration
// npx prisma migrate dev --name add_phone_number_to_user
// npx prisma migrate deploy
